import os
import platform
import time
from datetime import datetime
import tkinter as tk
import keyboard
import pyautogui as pag
import pytz
import requests
import telebot
import wmi
from telebot import TeleBot, types
from telebot.types import Message
import ctypes
from pydub import AudioSegment
import winsound
import psutil
import GPUtil

from jarvis_telegram.markups.work_with_pc_markups import get_work_with_pc_markups, get_turn_off_markup, \
    get_tun_off_timer_markup, get_warning_markup, get_monitoring_markup
from languges import JARVIS, info_message

tok = "030449853c61a3cb7d9c32c14561db39"
token = '6929408227:AAFg7V3Qgu_86FQPmD3p5ifzvxvUInyJO84'
bot_1 = TeleBot(token=token)


# @bot.message_handler(regexp='—Ä–∞–±–æ—Ç–∞ —Å –ø–∫')
def work_with_pc(message: Message, bot: TeleBot):
    markup = get_work_with_pc_markups()
    # markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    # markup.add("–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –æ–∫–Ω–∞", "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –æ–∫–Ω–∞")
    # markup.add("–ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞", "–ü–æ–º–µ–Ω—è—Ç—å —Ñ–æ–Ω —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞")
    # markup.add('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω', '–ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ –∞—É–¥–∏–æ')
    # markup.add('–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ', '–°–æ—Å—Ç–æ—è–Ω–∏–µ', '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')
    # markup.add("–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫...", '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∫', '–°–ø—è—â–∏–π —Ä–µ–∂–∏–º')
    # markup.add("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)


def desktop_wallpaper(message: Message, bot: TeleBot):
    message_for_user = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É.")
    bot.register_next_step_handler(message_for_user, set_desktop_wallpaper, bot=bot)


def set_desktop_wallpaper(message: Message, bot: TeleBot):
    try:
        fileID = message.photo[-1].file_id
        dirname, filename = os.path.split(os.path.abspath(__file__))

        file_info = bot.get_file(fileID)
        downloaded_file = bot.download_file(file_info.file_path)

        with open(dirname + '\\' + "image.jpg", 'wb') as new_file:
            new_file.write(downloaded_file)
        ctypes.windll.user32.SystemParametersInfoW(20, 0,
                                                   dirname + '\\' + 'image.jpg', 0)
        bot.send_message(message.chat.id, text='–£—Å–ø–µ—à–Ω–æ')
    except TypeError as e:
        bot.send_message(message.chat.id, '–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É')

def close_all_windows(message: Message, bot: TeleBot):
    keyboard.send('Windows+d')
    bot.send_message(message.chat.id, text='–í—ã–ø–æ–ª–Ω–µ–Ω–æ!')


def show_all_process():
    right_proc = set()
    for process in psutil.process_iter(['name']):
        if (process.io_counters().read_count > 10 and process.io_counters().write_count > 10
            and process.connections() != []) and process.threads() != []:
            right_proc.add(process.name())
    return right_proc


# @bot.message_handler(regexp='–ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞')
def send_all_process(message: Message, bot: TeleBot):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in show_all_process():
        button = types.KeyboardButton(i)
        markup.add(button)
    f = bot.send_message(message.chat.id, reply_markup=markup, text=f'–í–æ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å\n'
                                                                    f'–ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ –∑–∞ —á—Ç–æ –æ—Ç–≤–µ—á–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å,'
                                                                    f'–ª—É—á—à–µ –µ–≥–æ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å ;)')
    bot.register_next_step_handler(f, close_window, bot=bot)


def close_window(message: Message, bot: TeleBot):
    complete = False
    for process in psutil.process_iter(['name']):
        if process.name() == message.text:
            process.kill()
            complete = True
    if complete:
        bot.send_message(message.chat.id, text='–í—ã–ø–æ–ª–Ω–µ–Ω–æ!')
    else:
        bot.send_message(message.chat.id, text='–ü–æ—Ö–æ–∂–µ –∫—Ç–æ —Ç–æ —ç—Ç–æ —Å–¥–µ–ª–∞–ª –¥–æ –º–µ–Ω—è :(')


def get_local_ip():
    hostname = requests.get(url="https://jsonip.com").json()
    return hostname


def get_info_ip(ip="127.0.0.1"):
    try:
        response = requests.get(url=f"http://ip-api.com/json/{ip}").json()
        return response
    except requests.exceptions.ConnectionError:
        print("(((")


def get_weather(city, tk):
    responce = requests.get(
        f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={tk}&units=metric&lang=ru").json()
    weather_info = (responce['main']['temp'], responce['weather'][0]['description'])
    return weather_info


my_ip = get_local_ip()['ip']
time_1 = get_info_ip(my_ip)

local_cite = time_1['city']
tz = pytz.timezone(time_1['timezone'])
time_now = datetime.now(tz).strftime('%H:%M')
my_city = time_1['city']


# @bot.message_handler(regexp="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
def info1(message: Message, bot: TeleBot):
    time1 = time_now
    location = local_cite
    all_about_weather = get_weather(my_city, tok)
    info = all_about_weather[1]
    weather1 = all_about_weather[0]

    bot.send_message(
        message.from_user.id,
        f"–ü—Ä–∏–≤–µ—Ç! –Ø –î–∂–∞—Ä–≤–∏—Å - –ì–æ–ª–æ—Å–æ–≤–æ–π, –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π, –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, "
        f"—Ä–æ–±–æ—Ç–æ–ø–æ–¥–æ–±–Ω—ã–π —Å–∫—Ä–∏–ø—Ç!\n–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å - @egor_vubni\n\n –ê —Ç–µ–ø–µ—Ä—å –æ —Ç–µ–±–µ:\n–ì–æ—Ä–æ–¥: {location} \n"
        f"–í—Ä–µ–º—è: {time1} \n–ü–æ–≥–æ–¥–∞: {info} \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –æ–∫–Ω–æ–º: {weather1}")


# @bot.message_handler(regexp='–ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ –∞—É–¥–∏–æ')
def say_voice(message: Message, bot: TeleBot):
    message_for_user = bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏—Å—å –Ω–∞ –ø–∫!")

    def sound_on_pc(message: Message, bot: TeleBot):
        file_info = bot.get_file(message.voice.file_id)
        path = file_info.file_path  # –í–æ—Ç —Ç—É—Ç-—Ç–æ –∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: voice/file_2.oga)
        fname1 = os.path.basename(path)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É—Ç—å –≤ –∏–º—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: file_2.oga)
        fname1 = fname1.split('.')[0]
        doc = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token,
                                                                             file_info.file_path))  # –ü–æ–ª—É—á–∞–µ–º –∏  —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—Å–ª–∞–Ω–Ω—É—é –≥–æ–ª–æ—Å–≤—É—Ö—É (–ê–≥–∞, –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –∞–π–¥–∏–æ —Ñ–∞–π–ª–æ–≤ –∏ —Å–ª—É—à–∞—Ç—å –≤—Å–µ, —á—Ç–æ —Ç—ã —Ç–∞–º –≥–æ–≤–æ—Ä–∏—à—å. –ê –ø—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç–∞–∫—É—é –±—è–∫—É –ø–æ–¥—Å–µ–ª—è—Ç –≤ –æ–≥—Ä–æ–º–Ω—ã–π —á–∞—Ç –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è [–∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ, –∞—Ö–∞—Ö–∞—Ö–∞])
        with open(fname1 + '.oga', 'wb') as f:
            f.write(doc.content)
        sound = AudioSegment.from_ogg(fname1 + ".oga")
        sound.export(fname1 + ".wav", format="wav")
        winsound.PlaySound(fname1 + '.wav', winsound.SND_FILENAME)
        bot.send_message(message.from_user.id, "–ü—Ä–æ–∏–∑–Ω–µ—Å–µ–Ω–æ")
        os.remove(fname1 + ".oga")
        os.remove(fname1 + ".wav")

    bot.register_next_step_handler(message_for_user, sound_on_pc, bot)


def get_system_info():
    computer = wmi.WMI()
    computer_info = computer.Win32_ComputerSystem()[0]
    os_info = computer.Win32_OperatingSystem()[0]
    proc_info = computer.Win32_Processor()[0]
    system_info = (computer_info, os_info, proc_info)
    return system_info


def get_amount_ram():
    info_ram = (str(round(psutil.virtual_memory().total / (1024.0 ** 3))) + " GB")
    return info_ram


system = platform.system()
version = platform.version()
proc_info = get_system_info()[2].Name.rstrip()
name_videocard = GPUtil.getGPUs()[0].name
amount_ram = get_amount_ram()


def characteristics(message: Message, bot: TeleBot):
    oper_system = f'–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {system}'
    system_ver = f'–í–µ—Ä—Å–∏—è –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã: {version}'
    processor = f'–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {proc_info}'
    ram = f'–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å: {amount_ram}'
    videocard = f'–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: `{name_videocard}'
    bot.send_message(message.chat.id, f"{oper_system}\n\n{system_ver}\n\n{processor}\n\n{ram}\n\n{videocard}")


def system_condition(message: Message, bot: TeleBot):
    bot.send_message(message.from_user.id, text='—Å–µ–∫—É–Ω–¥—É, –∏–∑–º–µ—Ä—è—é –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞')
    virtual_memory = str(psutil.virtual_memory().percent)
    cpu_percent = str(psutil.cpu_percent(3))
    try:
        gpu = int(GPUtil.getGPUs()[0].temperature)
    except:
        gpu = '–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –∏–ª–∏ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ AMD, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ'
    bot.send_message(message.from_user.id,
                     f"  –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: \nüí•–ù–∞–≥—Ä—É–∑–∫–∞ - {cpu_percent}%\n---------------------------------\n"
                     f"  –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (–û–ó–£):\nüí•–ù–∞–≥—Ä—É–∑–∫–∞ - {virtual_memory}%\n"
                     f"---------------------------------\n  –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: \nüå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {str(gpu)}¬∞")


# @bot.message_handler(regexp='–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥')
def monitoring(message: Message, bot: TeleBot):
    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # markup.row('5', '10', '20', '40', '60', '120')
    markup = get_monitoring_markup()
    message_for_user = bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö',
                                        reply_markup=markup)
    bot.register_next_step_handler(message_for_user, monitoring_system, bot)


def monitoring_system(message: Message, bot: TeleBot):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    result = message.text
    # WindowMessage(2)
    virtual_memory = str(psutil.virtual_memory().percent)
    cpu_percent = str(psutil.cpu_percent())
    try:
        gpu = int(GPUtil.getGPUs()[0].temperature)
    except:
        gpu = '–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –∏–ª–∏ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ AMD, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ'
    msg = bot.send_message(message.from_user.id,
                           f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –µ—â–µ {str(int(result))} —Å–µ–∫—É–Ω–¥ \n  –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: \nüí•"
                           f"–ù–∞–≥—Ä—É–∑–∫–∞ - {cpu_percent}%\n---------------------------------\n"
                           f"  –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (–û–ó–£):\nüí•"
                           f"–ù–∞–≥—Ä—É–∑–∫–∞ - {virtual_memory}%\n---------------------------------\n "
                           f" –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: \nüå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {str(gpu)}¬∞")
    bot.send_message(message.from_user.id, '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã', reply_markup=markup)
    for i in range(int(int(result) + 1)):
        try:
            gpu = int(GPUtil.getGPUs()[0].temperature)
        except:
            gpu = '–í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç –∏–ª–∏ –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ AMD, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –ø–æ–ª—É—á–∏—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ'
        virtual_memory = str(psutil.virtual_memory().percent)
        cpu_percent = str(psutil.cpu_percent())
        if i == int(result):
            bot.edit_message_text(chat_id=message.chat.id, message_id=msg.message_id,
                                  text=f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n  –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: \nüí•–ù–∞–≥—Ä—É–∑–∫–∞"
                                       f" - {cpu_percent}%\n---------------------------------\n  –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å"
                                       f" (–û–ó–£):\nüí•–ù–∞–≥—Ä—É–∑–∫–∞ - {virtual_memory}%\n---------------------------------\n"
                                       f"  –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: \n üå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {str(gpu)}¬∞")
            bot.reply_to(msg, '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–∫–æ–Ω—á–µ–Ω. –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏')
        else:
            bot.edit_message_text(chat_id=message.chat.id, message_id=msg.message_id,
                                  text=f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –µ—â–µ {str(int(int(result) - int(i)))} —Å–µ–∫—É–Ω–¥\n"
                                       f"  –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: \nüí•–ù–∞–≥—Ä—É–∑–∫–∞ - {cpu_percent}%\n---------------------------------"
                                       f"\n  –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (–û–ó–£):\nüí•–ù–∞–≥—Ä—É–∑–∫–∞ - {virtual_memory}%\n--------------"
                                       f"-------------------\n  –í–∏–¥–µ–æ–∫–∞—Ä—Ç–∞: \nüå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ - {str(gpu)}¬∞")
        time.sleep(1)


# @bot.message_handler(regexp='–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∫')
def reboot_system(message: Message, bot: TeleBot):
    os.system('reboot now')


# @bot.message_handler(regexp='–°–ø—è—â–∏–π —Ä–µ–∂–∏–º')
def sleep_mode(message: Message, bot: TeleBot):
    os.system("rundll32.exe powrprof.dll,SetSuspendState 0,1,0")


# @bot.message_handler(regexp='–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫...')
def turn_off_pc(message: Message, bot: TeleBot):
    markup = get_turn_off_markup()
    # markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    # markup.add("–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫", "–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ", "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä")
    # markup.add("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(message.chat.id, '–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)


# @bot.message_handler(regexp='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä')
def stop_timer(message: Message, bot: TeleBot):
    os.system("shutdown -a")


# @bot.message_handler(regexp='–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ')
def turn_off_timer(message: Message, bot: TeleBot):
    markup = get_tun_off_timer_markup()
    # markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    # markup.row("1", "2", "5", '10', '15', '20')
    # markup.row("30", "40", "50", '60', '90', '120')
    # markup.add("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    message_for_user = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ - —á–µ—Ä–µ–∑ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–∫',
                                        reply_markup=markup)
    bot.register_next_step_handler(message_for_user, turn_off_timer_on)


def turn_off_timer_on(message: Message):
    os.system("shutdown -s -t " + str(int(message.text) * 60))


# @bot.message_handler(regexp='–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫')
def turn_off(message: Message, bot: TeleBot):
    bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞—é...')
    os.system("shutdown -s -t 0")


def very_warning_message(text, title):
    root = tk.Tk()
    root.title("–î–∂–∞—Ä–≤–∏—Å. " + title)

    text_label = tk.Label(root, text=text, padx=10, pady=10)
    text_label.pack()

    root.mainloop()


# @bot.message_handler(regexp='–í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω')
def display_notice(message: Message, bot: TeleBot):
    markup = get_warning_markup()
    # markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    # markup.add('–í—ã–≤–µ—Å—Ç–∏ –≤–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    # markup.add('–í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
    # markup.add('–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
    # markup.add("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç', reply_markup=markup)


# @bot.message_handler(regexp='–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
def display_info_notice(message: Message, bot: TeleBot):
    message_for_user = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è')
    bot.register_next_step_handler(message_for_user, message_information)


def message_information(message: Message):
    very_warning_message(message.text, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è!")


# @bot.message_handler(regexp='–í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
def display_warning(message: Message, bot: TeleBot):
    message_for_user = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è')
    bot.register_next_step_handler(message_for_user, message_warning)


def message_warning(message: Message):
    very_warning_message(message.text, "–í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")


# @bot.message_handler(regexp='–í—ã–≤–µ—Å—Ç–∏ –≤–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
def display_important_notice(message: Message, bot: TeleBot):
    message_for_user = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∞–∂–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è')
    bot.register_next_step_handler(message_for_user, message_important)


def message_important(message: Message):
    very_warning_message(message.text, "–í–Ω–∏–º–∞–Ω–∏–µ!")


work_with_pc_handlers = {
    r'(?i)—Ä–∞–±–æ—Ç–∞ —Å –ø–∫': work_with_pc, r'(?i)–ü–æ–º–µ–Ω—è—Ç—å —Ñ–æ–Ω —Ä–∞–±–æ—á–µ–≥–æ —Å—Ç–æ–ª–∞': desktop_wallpaper,
    r'(?i)–ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞': send_all_process, r'(?i)–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –æ–∫–Ω–∞': close_all_windows,
    r'(?i)–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –æ–∫–Ω–∞': close_all_windows, r'(?i)–°–æ—Å—Ç–æ—è–Ω–∏–µ': system_condition,
    r'(?i)–ü—Ä–æ–∏–∑–Ω–µ—Å—Ç–∏ –∞—É–¥–∏–æ': say_voice, r'(?i)–ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ': characteristics, r'(?i)–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è': info1,
    r'(?i)–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥': monitoring, r'(?i)–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∫': reboot_system, r'(?i)–°–ø—è—â–∏–π —Ä–µ–∂–∏–º': sleep_mode,
    r'(?i)–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫...': turn_off_pc, r'(?i)–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä –Ω–∞ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ': turn_off_timer,
    r'(?i)–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä': stop_timer, r'(?i)–í—ã–∫–ª—é—á–∏—Ç—å –ø–∫': turn_off,
    r'(?i)–í—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω': display_notice,
    r'(?i)–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ': display_important_notice,
    r'(?i)–í—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ': display_warning, r'(?i)–í—ã–≤–µ—Å—Ç–∏ –≤–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ': display_important_notice
}
